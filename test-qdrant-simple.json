{
  "name": "Test Qdrant Simple",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST", 
        "path": "test-qdrant",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "test-qdrant-endpoint"
    },
    {
      "parameters": {
        "jsCode": "// Create test vector for Qdrant\nconst testVector = Array.from({length: 768}, () => Math.random() - 0.5);\n\nreturn {\n  collection_name: \"test_collection\",\n  vector_id: Date.now(),\n  vector: testVector,\n  payload: {\n    text: \"Test document for Qdrant from N8N\",\n    source: \"n8n_test\",\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "prepare-vector",
      "name": "Prepare Test Vector",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "http://datalive-qdrant:6333/collections/test_collection/points",
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"points\": [\n    {\n      \"id\": {{$json.vector_id}},\n      \"vector\": {{JSON.stringify($json.vector)}},\n      \"payload\": {{JSON.stringify($json.payload)}}\n    }\n  ]\n}",
        "options": {}
      },
      "id": "insert-vector",
      "name": "Insert Vector",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://datalive-qdrant:6333/collections/test_collection/points/search",
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"vector\": {{JSON.stringify($json.vector)}},\n  \"limit\": 3,\n  \"with_payload\": true\n}",
        "options": {}
      },
      "id": "search-vector",
      "name": "Search Vector", 
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Test results\nconst insertResult = $('Insert Vector').item(0).json;\nconst searchResult = $json;\n\nconst insertSuccess = insertResult.status === 'ok';\nconst searchSuccess = searchResult.result && Array.isArray(searchResult.result);\nconst foundVector = searchSuccess && searchResult.result.length > 0;\nconst highScore = foundVector && searchResult.result[0].score > 0.99;\n\nreturn {\n  test_name: \"Qdrant Operations Test\",\n  insert_status: insertSuccess ? \"PASS\" : \"FAIL\",\n  search_status: searchSuccess ? \"PASS\" : \"FAIL\", \n  vector_found: foundVector ? \"PASS\" : \"FAIL\",\n  high_similarity: highScore ? \"PASS\" : \"FAIL\",\n  overall_status: (insertSuccess && searchSuccess && foundVector && highScore) ? \"PASS\" : \"FAIL\",\n  details: {\n    insert_response: insertResult,\n    search_results: searchSuccess ? searchResult.result.length : 0,\n    top_score: foundVector ? searchResult.result[0].score : null,\n    vector_id: $('Prepare Test Vector').item(0).json.vector_id\n  },\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "test-result",
      "name": "Test Result",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{JSON.stringify($json, null, 2)}}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [{
          "node": "Prepare Test Vector",
          "type": "main",
          "index": 0
        }]
      ]
    },
    "Prepare Test Vector": {
      "main": [
        [{
          "node": "Insert Vector",
          "type": "main",
          "index": 0
        }]
      ]
    },
    "Insert Vector": {
      "main": [
        [{
          "node": "Search Vector",
          "type": "main",
          "index": 0
        }]
      ]
    },
    "Search Vector": {
      "main": [
        [{
          "node": "Test Result",
          "type": "main",
          "index": 0
        }]
      ]
    },
    "Test Result": {
      "main": [
        [{
          "node": "Webhook Response",
          "type": "main",
          "index": 0
        }]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "active": false,
  "staticData": {}
}