# docker-compose.test.yml - Servicio de testing para DataLive
# Usar con: docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d

services:
  # Test Container - Para ejecutar pruebas consistentes
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    image: datalive-test:latest
    container_name: datalive-test
    environment:
      # PostgreSQL
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: adminpassword  # Usar el estandarizado
      POSTGRES_DB: ${POSTGRES_DB}
      # Redis
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # Services URLs
      N8N_URL: http://n8n:5678
      OLLAMA_URL: http://ollama:11434
      QDRANT_URL: http://qdrant:6333
      MINIO_URL: http://minio:9000
      GRAFANA_URL: http://grafana:3000
      PROMETHEUS_URL: http://prometheus:9090
      LOKI_URL: http://loki:3100
    volumes:
      # Montar scripts locales para desarrollo
      - ./scripts:/tests/local-scripts:ro
      # Logs persistentes
      - ./logs:/tests/logs
      # Socket Docker para ejecutar comandos docker
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - frontend
      - backend
      - monitoring
    depends_on:
      - n8n
      - postgres
      - redis
      - qdrant
      - minio
      - ollama
      - grafana
      - prometheus
      - loki
    stdin_open: true
    tty: true
    command: ["tail", "-f", "/dev/null"]  # Mantener el contenedor corriendo