{
  "name": "Simple RAG Query",
  "nodes": [
    {
      "parameters": {
        "content": "# Simple RAG Query Workflow\n\nThis workflow demonstrates a basic RAG (Retrieval-Augmented Generation) query:\n\n1. üîç Receives a query via webhook\n2. üßÆ Generates embeddings using Ollama\n3. üîé Searches Qdrant for similar content\n4. ü§ñ Generates response using context\n5. üì§ Returns structured answer\n\n**Test URL**: POST /webhook/simple-rag",
        "height": 464,
        "width": 468
      },
      "id": "1a7b8c9d-0e1f-2a3b-4c5d-6e7f8a9b0c1d",
      "name": "RAG Query Info",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "simple-rag",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "2b8c9d0e-1f2a-3b4c-5d6e-7f8a9b0c1d2e", 
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "position": [
        760,
        240
      ],
      "typeVersion": 2,
      "webhookId": "simple-rag"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "query-extract",
              "name": "query",
              "value": "={{ $json.body.query || $json.query || 'What is DataLive?' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3c9d0e1f-2a3b-4c5d-6e7f-8a9b0c1d2e3f",
      "name": "Extract Query",
      "type": "n8n-nodes-base.set",
      "position": [
        980,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ollama:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model", 
              "value": "nomic-embed-text:v1.5"
            },
            {
              "name": "prompt",
              "value": "={{ $json.query }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "4d0e1f2a-3b4c-5d6e-7f8a-9b0c1d2e3f4a",
      "name": "Generate Embeddings",
      "type": "n8n-nodes-base.httpRequest", 
      "position": [
        1200,
        240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://qdrant:6333/collections/documents/points/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "vector",
              "value": "={{ $json.embedding }}"
            },
            {
              "name": "limit",
              "value": "3"
            },
            {
              "name": "with_payload",
              "value": "true"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "5e1f2a3b-4c5d-6e7f-8a9b-0c1d2e3f4a5b",
      "name": "Search Qdrant",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1420,
        240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST", 
        "url": "http://ollama:11434/api/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "phi4-mini:latest"
            },
            {
              "name": "prompt",
              "value": "Context: {{ $json.result[0]?.payload?.content || 'No context found' }}\n\nQuestion: {{ $('Extract Query').item.json.query }}\n\nAnswer based on the context:"
            },
            {
              "name": "stream",
              "value": "false"
            }
          ]
        },
        "options": {
          "timeout": 60000
        }
      },
      "id": "6f2a3b4c-5d6e-7f8a-9b0c-1d2e3f4a5b6c",
      "name": "Generate Response",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1640,
        240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "response-format",
              "name": "answer",
              "value": "={{ $json.response }}",
              "type": "string"
            },
            {
              "name": "query",
              "value": "={{ $('Extract Query').item.json.query }}",
              "type": "string"
            },
            {
              "name": "sources",
              "value": "={{ $('Search Qdrant').item.json.result?.length || 0 }}",
              "type": "number"
            },
            {
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            }
          ]
        }
      },
      "id": "7a3b4c5d-6e7f-8a9b-0c1d-2e3f4a5b6c7d",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "position": [
        1860,
        240
      ],
      "typeVersion": 3.4
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Extract Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Query": {
      "main": [
        [
          {
            "node": "Generate Embeddings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Embeddings": {
      "main": [
        [
          {
            "node": "Search Qdrant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Qdrant": {
      "main": [
        [
          {
            "node": "Generate Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Response": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "datalive"
  },
  "id": "2",
  "tags": ["rag", "query", "webhook", "ai"]
}