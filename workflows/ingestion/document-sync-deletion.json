{
    "name": "Document Sync with Deletion",
    "nodes": [
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "minutes",
                "minutesInterval": 30
              }
            ]
          }
        },
        "id": "schedule-trigger",
        "name": "Schedule Trigger",
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.1,
        "position": [250, 300]
      },
      {
        "parameters": {
          "operation": "list",
          "queryString": "trashed=false",
          "returnAll": true,
          "options": {
            "fields": [
              "id",
              "name",
              "mimeType",
              "modifiedTime",
              "md5Checksum",
              "parents"
            ]
          }
        },
        "id": "gdrive-list",
        "name": "List Google Drive Files",
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [450, 200],
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "{{GDRIVE_CREDENTIAL_ID}}"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "={{$env.POSTGRES_HOST}}/rest/query",
          "authentication": "genericCredential",
          "genericAuthType": "httpBasicAuth",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "query",
                "value": "SELECT source_id, document_hash, file_name FROM rag.documents WHERE source_type = 'gdrive' AND is_deleted = FALSE"
              }
            ]
          }
        },
        "id": "get-existing-docs",
        "name": "Get Existing Documents",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [450, 400],
        "credentials": {
          "httpBasicAuth": {
            "id": "{{POSTGRES_CREDENTIAL_ID}}"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// Compare source files with database\nconst sourceFiles = $input.all()[0].json;\nconst dbFiles = $input.all()[1].json;\n\n// Create maps for efficient lookup\nconst sourceMap = new Map();\nconst dbMap = new Map();\n\n// Map source files by ID\nfor (const file of sourceFiles) {\n  sourceMap.set(file.id, {\n    id: file.id,\n    name: file.name,\n    mimeType: file.mimeType,\n    modifiedTime: file.modifiedTime,\n    md5Checksum: file.md5Checksum || '',\n    parents: file.parents || []\n  });\n}\n\n// Map database files by source_id\nfor (const file of dbFiles) {\n  dbMap.set(file.source_id, {\n    source_id: file.source_id,\n    document_hash: file.document_hash,\n    file_name: file.file_name\n  });\n}\n\n// Find files to process\nconst toAdd = [];\nconst toUpdate = [];\nconst toDelete = [];\n\n// Check source files\nfor (const [id, sourceFile] of sourceMap) {\n  const dbFile = dbMap.get(id);\n  \n  if (!dbFile) {\n    // New file\n    toAdd.push({\n      action: 'add',\n      file: sourceFile\n    });\n  } else if (sourceFile.md5Checksum !== dbFile.document_hash) {\n    // Modified file\n    toUpdate.push({\n      action: 'update',\n      file: sourceFile,\n      oldHash: dbFile.document_hash\n    });\n  }\n}\n\n// Check for deleted files\nfor (const [source_id, dbFile] of dbMap) {\n  if (!sourceMap.has(source_id)) {\n    toDelete.push({\n      action: 'delete',\n      source_id: source_id,\n      file_name: dbFile.file_name\n    });\n  }\n}\n\n// Return all actions\nreturn [\n  ...toAdd,\n  ...toUpdate,\n  ...toDelete\n];"
        },
        "id": "compare-files",
        "name": "Compare Files",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [650, 300]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$json.action}}",
                "value2": "delete"
              }
            ]
          }
        },
        "id": "route-by-action",
        "name": "Route by Action",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 2,
        "position": [850, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "={{$env.POSTGRES_HOST}}/rest/query",
          "authentication": "genericCredential",
          "genericAuthType": "httpBasicAuth",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "query",
                "value": "UPDATE rag.documents SET is_deleted = TRUE, updated_at = NOW() WHERE source_id = '{{$json.source_id}}' AND source_type = 'gdrive' RETURNING document_id"
              }
            ]
          }
        },
        "id": "mark-deleted",
        "name": "Mark Document as Deleted",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [1050, 200],
        "credentials": {
          "httpBasicAuth": {
            "id": "{{POSTGRES_CREDENTIAL_ID}}"
          }
        }
      },
      {
        "parameters": {
          "method": "DELETE",
          "url": "={{$env.QDRANT_URL}}/collections/documents/points",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "points",
                "value": "={{$json.qdrant_point_ids}}"
              }
            ]
          }
        },
        "id": "delete-from-qdrant",
        "name": "Delete from Qdrant",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [1250, 200]
      },
      {
        "parameters": {
          "method": "DELETE",
          "url": "={{$env.MINIO_URL}}/{{$json.bucket}}/{{$json.object_key}}",
          "authentication": "genericCredential",
          "genericAuthType": "httpHeaderAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Authorization",
                "value": "Bearer {{$credentials.accessToken}}"
              }
            ]
          }
        },
        "id": "delete-from-minio",
        "name": "Delete from MinIO",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [1450, 200],
        "credentials": {
          "httpHeaderAuth": {
            "id": "{{MINIO_CREDENTIAL_ID}}"
          }
        }
      },
      {
        "parameters": {
          "operation": "download",
          "fileId": "={{$json.file.id}}"
        },
        "id": "download-file",
        "name": "Download File",
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [1050, 400],
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "{{GDRIVE_CREDENTIAL_ID}}"
          }
        }
      },
      {
        "parameters": {
          "functionCode": "// Process document workflow\n// This would call the document processing sub-workflow\nreturn items;"
        },
        "id": "process-document",
        "name": "Process Document",
        "type": "n8n-nodes-base.function",
        "typeVersion": 1,
        "position": [1250, 400]
      }
    ],
    "connections": {
      "schedule-trigger": {
        "main": [
          [
            {
              "node": "gdrive-list",
              "type": "main",
              "index": 0
            },
            {
              "node": "get-existing-docs",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "gdrive-list": {
        "main": [
          [
            {
              "node": "compare-files",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "get-existing-docs": {
        "main": [
          [
            {
              "node": "compare-files",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "compare-files": {
        "main": [
          [
            {
              "node": "route-by-action",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "route-by-action": {
        "main": [
          [
            {
              "node": "mark-deleted",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "download-file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "mark-deleted": {
        "main": [
          [
            {
              "node": "delete-from-qdrant",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "delete-from-qdrant": {
        "main": [
          [
            {
              "node": "delete-from-minio",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "download-file": {
        "main": [
          [
            {
              "node": "process-document",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateId": "document-sync-deletion"
    },
    "pinData": {},
    "versionId": "1.0.0",
    "triggerCount": 1
  }