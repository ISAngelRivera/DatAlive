# docker-compose.yml - v3.7 (N8N Native Setup)

services:
  # ... (postgres, neo4j, qdrant, minio, ollama, datalive_agent se quedan igual)
  postgres:
    image: postgres:16-alpine
    container_name: datalive-postgres
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - datalive-net
  neo4j:
    image: neo4j:5-community
    container_name: datalive-neo4j
    restart: unless-stopped
    env_file: .env
    environment:
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      # Enable HTTPS for Safari compatibility  
      - NEO4J_server_https_enabled=true
      - NEO4J_server_https_listen__address=0.0.0.0:7473
      - NEO4J_server_http_enabled=true
      - NEO4J_server_http_listen__address=0.0.0.0:7474
      # SSL configuration with self-signed certs
      - NEO4J_server_https_certificate=/ssl/neo4j.cert
      - NEO4J_server_https_private__key=/ssl/neo4j.key
      # Disable strict validation for SSL config
      - NEO4J_server_config_strict__validation_enabled=false
    ports:
      - "7474:7474"   # HTTP
      - "7473:7473"   # HTTPS
      - "7687:7687"   # Bolt
    volumes:
      - neo4j-data:/data
      - ./init-neo4j:/import
      - ./init-neo4j/ssl:/ssl
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q --no-check-certificate https://localhost:7473 || wget --spider -q http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - datalive-net
  qdrant:
    image: qdrant/qdrant:latest
    container_name: datalive-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - datalive-net
  minio:
    image: minio/minio:latest
    container_name: datalive-minio
    restart: unless-stopped
    env_file: .env
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - datalive-net
  ollama:
    image: ollama/ollama:latest
    container_name: datalive-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - datalive-net

  n8n:
    image: n8nio/n8n
    container_name: datalive-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    env_file:
      - .env
    # Autenticaci칩n b치sica reactivada - setup completo
    volumes:
      - n8n-data:/home/node/.n8n
      - ./datalive_agent/n8n_workflows:/workflows
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - datalive-net

  # Sidecar container temporal para configuraci칩n autom치tica de N8N
  n8n-setup:
    image: alpine:latest
    container_name: datalive-n8n-setup
    env_file: .env
    volumes:
      - ./init-n8n/setup-n8n.sh:/setup-n8n.sh:ro
      - ./datalive_agent/n8n_workflows:/workflows:ro
    depends_on:
      n8n:
        condition: service_healthy
    command: >
      sh -c "
        apk add --no-cache curl jq &&
        sh /setup-n8n.sh
      "
    networks:
      - datalive-net

  datalive_agent:
    build:
      context: ./datalive_agent
    container_name: datalive-agent
    restart: unless-stopped
    env_file: .env
    ports:
      - "${DATALIVE_AGENT_PORT}:${DATALIVE_AGENT_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      qdrant:
        condition: service_started
      minio:
        condition: service_healthy
      n8n:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - datalive-net

networks:
  datalive-net:
    driver: bridge

volumes:
  postgres-data:
  neo4j-data:
  qdrant-data:
  minio-data:
  ollama-data:
  n8n-data: