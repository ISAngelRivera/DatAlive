=== ACTUALIZANDO POSTGRESQL CON PGVECTOR ===

1. Deteniendo contenedor postgres actual...
datalive-postgres

2. Eliminando contenedor (manteniendo datos)...
datalive-postgres

3. Iniciando nuevo contenedor con pgvector...
 Container datalive-postgres  Creating
 Container datalive-postgres  Created
 Container datalive-postgres  Starting
 Container datalive-postgres  Started

4. Esperando que PostgreSQL esté listo (30 segundos)...

5. Verificando que pgvector está disponible...
CREATE EXTENSION

6. Verificando extensiones instaladas:
                                     List of installed extensions
   Name    | Version |   Schema   |                            Description                            
-----------+---------+------------+-------------------------------------------------------------------
 btree_gin | 1.3     | public     | support for indexing common datatypes in GIN
 pg_trgm   | 1.6     | public     | text similarity measurement and index searching based on trigrams
 pgcrypto  | 1.3     | public     | cryptographic functions
 plpgsql   | 1.0     | pg_catalog | PL/pgSQL procedural language
 uuid-ossp | 1.1     | public     | generate universally unique identifiers (UUIDs)
 vector    | 0.8.0   | public     | vector data type and ivfflat and hnsw access methods
(6 rows)


7. Probando funcionalidad de vectores...
      distance      
--------------------
 2.8284271247461903
(1 row)


8. Iniciando resto de servicios...
 Container datalive-neo4j  Running
 Container datalive-prometheus  Running
 Container datalive-ollama  Running
 Container datalive-minio  Running
 Container datalive-redis  Running
 Container datalive-qdrant  Running
 Container datalive-postgres  Running
 Container datalive-grafana  Running
 Container datalive-ollama-pull  Recreate
 Container datalive-n8n  Running
 Container datalive-agent  Running
 Container datalive-healthcheck  Recreate
 Container datalive-ollama-pull  Recreated
 Container datalive-healthcheck  Recreated
 Container datalive-ollama-pull  Starting
 Container datalive-neo4j  Waiting
 Container datalive-postgres  Waiting
 Container datalive-qdrant-init  Starting
 Container datalive-prometheus  Waiting
 Container datalive-postgres  Waiting
 Container datalive-ollama-pull  Started
 Container datalive-qdrant-init  Started
 Container datalive-prometheus  Healthy
 Container datalive-postgres  Healthy
 Container datalive-postgres  Waiting
 Container datalive-neo4j  Waiting
 Container datalive-postgres  Healthy
 Container datalive-postgres-init  Starting
 Container datalive-minio  Waiting
 Container datalive-n8n  Waiting
 Container datalive-n8n  Waiting
 Container datalive-redis  Waiting
 Container datalive-neo4j  Healthy
 Container datalive-neo4j-init  Starting
 Container datalive-postgres-init  Started
 Container datalive-neo4j-init  Started
 Container datalive-redis  Healthy
 Container datalive-n8n  Healthy
 Container datalive-n8n-setup  Starting
 Container datalive-n8n  Healthy
 Container datalive-neo4j  Healthy
 Container datalive-postgres  Healthy
 Container datalive-minio  Healthy
 Container datalive-n8n-setup  Started
 Container datalive-agent  Waiting
 Container datalive-postgres-init  Waiting
 Container datalive-neo4j-init  Waiting
 Container datalive-qdrant-init  Waiting
 Container datalive-n8n-setup  Waiting
 Container datalive-prometheus  Waiting
 Container datalive-grafana  Waiting
 Container datalive-qdrant-init  Exited
 Container datalive-grafana  Healthy
 Container datalive-agent  Healthy
 Container datalive-prometheus  Healthy
 Container datalive-postgres-init  Exited
 Container datalive-neo4j-init  Exited
 Container datalive-n8n-setup  Exited
 Container datalive-healthcheck  Starting
 Container datalive-healthcheck  Started

✅ ACTUALIZACIÓN COMPLETADA
PostgreSQL ahora incluye pgvector y está listo para operaciones vectoriales
