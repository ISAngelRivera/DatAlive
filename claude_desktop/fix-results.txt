=== FIXING DATALIVE INFRASTRUCTURE ===

1. Instalando pgvector...
ERROR:  extension "vector" is not available
DETAIL:  Could not open extension control file "/usr/local/share/postgresql/extension/vector.control": No such file or directory.
HINT:  The extension must first be installed on the system where PostgreSQL is running.

2. Extensiones PostgreSQL instaladas:
                                     List of installed extensions
   Name    | Version |   Schema   |                            Description                            
-----------+---------+------------+-------------------------------------------------------------------
 btree_gin | 1.3     | public     | support for indexing common datatypes in GIN
 pg_trgm   | 1.6     | public     | text similarity measurement and index searching based on trigrams
 pgcrypto  | 1.3     | public     | cryptographic functions
 plpgsql   | 1.0     | pg_catalog | PL/pgSQL procedural language
 uuid-ossp | 1.1     | public     | generate universally unique identifiers (UUIDs)
(5 rows)


3. Archivos SQL encontrados:
../init-automated-configs/postgres/init.sql
../_legacy/examples_v1/agentic-rag-knowledge-graph/sql/schema.sql

4. Verificando Agent:
{"status":"healthy","service":"datalive-unified-agent","version":"3.0.0"}
5. Tablas actuales en PostgreSQL:
Did not find any relations.

6. Esquemas disponibles:
        List of schemas
    Name    |       Owner       
------------+-------------------
 cag        | datalive_user
 monitoring | datalive_user
 public     | pg_database_owner
 rag        | datalive_user
(4 rows)


7. Ejecutando schema principal...
Ejecutando init.sql...
NOTICE:  extension "uuid-ossp" already exists, skipping
CREATE EXTENSION
NOTICE:  extension "pgcrypto" already exists, skipping
NOTICE:  extension "pg_trgm" already exists, skipping
CREATE EXTENSION
CREATE EXTENSION
CREATE EXTENSION
NOTICE:  extension "btree_gin" already exists, skipping
NOTICE:  schema "rag" already exists, skipping
CREATE SCHEMA
NOTICE:  schema "cag" already exists, skipping
NOTICE:  schema "monitoring" already exists, skipping
CREATE SCHEMA
CREATE SCHEMA
SET
NOTICE:  relation "documents" already exists, skipping
CREATE TABLE
NOTICE:  relation "chunks" already exists, skipping
CREATE TABLE
NOTICE:  relation "idx_documents_source" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_unique_chunk_per_doc" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_documents_hash" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_documents_status" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_documents_metadata" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_chunks_document" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_chunks_hash" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_chunks_qdrant" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_chunks_content_search" already exists, skipping
CREATE INDEX
CREATE TABLE
NOTICE:  relation "media_assets" already exists, skipping
NOTICE:  relation "idx_media_document" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_media_chunk" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_media_hash" already exists, skipping
CREATE INDEX
NOTICE:  relation "query_cache" already exists, skipping
CREATE TABLE
CREATE INDEX
NOTICE:  relation "idx_cache_hash" already exists, skipping
CREATE INDEX
NOTICE:  relation "idx_cache_expiry" already exists, skipping
NOTICE:  relation "query_logs" already exists, skipping
CREATE TABLE
NOTICE:  relation "idx_query_logs_time" already exists, skipping
CREATE INDEX
CREATE INDEX
NOTICE:  relation "idx_query_logs_user" already exists, skipping
CREATE FUNCTION
DO
DO

8. Tablas despu√©s de init:
               List of relations
 Schema |     Name     | Type  |     Owner     
--------+--------------+-------+---------------
 rag    | chunks       | table | datalive_user
 rag    | documents    | table | datalive_user
 rag    | media_assets | table | datalive_user
(3 rows)


              List of relations
 Schema |    Name     | Type  |     Owner     
--------+-------------+-------+---------------
 cag    | query_cache | table | datalive_user
(1 row)


                List of relations
   Schema   |    Name    | Type  |     Owner     
------------+------------+-------+---------------
 monitoring | query_logs | table | datalive_user
(1 row)

